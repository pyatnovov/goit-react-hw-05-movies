{"version":3,"file":"static/js/815.8b325155.chunk.js","mappings":"kOA+CA,UA1Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAqBF,EAAAA,EAAAA,UAAS,MAArBG,GAAT,eAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8EAChB,KACEC,EAAAA,EAAAA,IAAYR,GAASS,MAAK,SAAAC,GACxB,OAAON,EAAQM,EAASP,KACzB,GAGF,CAFC,MAAOQ,GACPN,EAASM,EACV,CAPe,2CAAH,qDASfJ,GACD,GAAE,CAACP,KAEF,+BACE,wBACGG,EAAKS,KAAI,SAAAC,GACR,OACE,0BACGA,EAASC,cACR,gBACEC,IAAG,yCAAoCF,EAASC,cAChDE,IAAG,UAAKH,EAASI,KAAd,gBAGL,0BACE,gBAAKF,IAAKG,EAAKF,IAAI,iBAGvB,kCAAUH,EAASI,SACnB,uCAAeJ,EAASM,eAZjBN,EAASO,GAerB,OAIR,C,sLC9CKC,EAAW,gCACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA0BC,EAA1B,+BAAgC,GAAIC,EAApC,+BAA6C,CAAC,EAA9C,SACqBC,MAAMF,EAAKC,GADhC,YACQE,EADR,QAEcC,GAFd,iCAEyBD,EAAKE,OAF9B,gDAEuCC,QAAQC,OAAO,IAAIC,MAAM,cAFhE,2GAKO,SAASC,IACd,OAAOV,EAAW,GAAD,OAAIF,EAAJ,oCAAwCC,GAC1D,CACM,SAASY,EAAclC,GAC5B,OAAOuB,EAAW,GAAD,OACZF,EADY,iBACKrB,EADL,oBACwBsB,EADxB,mBAGlB,CACM,SAASa,EAAuBC,GACrC,OAAOb,EAAW,GAAD,OACZF,EADY,gCACoBC,EADpB,iCACgDc,EADhD,+BAGlB,CACM,SAAS5B,EAAYR,GAC1B,OAAOuB,EAAW,GAAD,OACZF,EADY,iBACKrB,EADL,4BACgCsB,EADhC,mBAGlB,CACM,SAASe,EAAerC,GAC7B,OAAOuB,EAAW,GAAD,OACZF,EADY,iBACKrB,EADL,4BACgCsB,EADhC,0BAGlB,C,gJC9BD,SAASgB,EAAmBC,EAAKC,EAAST,EAAQU,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAON,EAAII,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOnC,GAEP,YADAoB,EAAOpB,EAET,CAEIkC,EAAKE,KACPP,EAAQM,GAERhB,QAAQU,QAAQM,GAAOrC,KAAKgC,EAAOC,EAEvC,CAEe,SAASM,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIvB,SAAQ,SAAUU,EAAST,GACpC,IAAIQ,EAAMU,EAAGK,MAAMJ,EAAME,GAEzB,SAASX,EAAMK,GACbR,EAAmBC,EAAKC,EAAST,EAAQU,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOa,GACdjB,EAAmBC,EAAKC,EAAST,EAAQU,EAAOC,EAAQ,QAASa,EACnE,CAEAd,OAAMe,EACR,GACF,CACF,C","sources":["Pages/Cast/Cast.js","services/Services.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastById } from 'services/Services';\nimport img from 'img/picture-vector-icon-no-image-260nw-1732584341.webp';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        getCastById(movieId).then(response => {\n          return setCast(response.cast);\n        });\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n  return (\n    <>\n      <ul>\n        {cast.map(castItem => {\n          return (\n            <li key={castItem.id}>\n              {castItem.profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w300${castItem.profile_path}`}\n                  alt={`${castItem.name} portrait`}\n                />\n              ) : (\n                <div>\n                  <img src={img} alt=\"Not Found\" />\n                </div>\n              )}\n              <p>Name: {castItem.name}</p>\n              <p>Character: {castItem.character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\nexport default Cast;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '09994a796f4e1a9c14a0723469809976';\n\nasync function ErrorFetch(url = '', config = {}) {\n  const resp = await fetch(url, config);\n  return resp.ok ? await resp.json() : Promise.reject(new Error('Not Found'));\n}\n\nexport function getPopularMovies() {\n  return ErrorFetch(`${BASE_URL}trending/all/day?api_key=${KEY}`);\n}\nexport function getMoviesById(movieId) {\n  return ErrorFetch(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n}\nexport function getMoviesBySearchQuery(query) {\n  return ErrorFetch(\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n}\nexport function getCastById(movieId) {\n  return ErrorFetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n}\nexport function getReviewsById(movieId) {\n  return ErrorFetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","cast","setCast","setError","useEffect","fetchCast","getCastById","then","response","error","map","castItem","profile_path","src","alt","name","img","character","id","BASE_URL","KEY","ErrorFetch","url","config","fetch","resp","ok","json","Promise","reject","Error","getPopularMovies","getMoviesById","getMoviesBySearchQuery","query","getReviewsById","asyncGeneratorStep","gen","resolve","_next","_throw","key","arg","info","value","done","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}