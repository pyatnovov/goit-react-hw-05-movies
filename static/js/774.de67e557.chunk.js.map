{"version":3,"file":"static/js/774.de67e557.chunk.js","mappings":"yNAsCA,UAlCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAqBF,EAAAA,EAAAA,UAAS,MAArBG,GAAT,eAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEGC,EAAAA,EAAAA,IAAeR,GAFlB,OAETS,EAFS,OAGfL,EAAWK,EAAIC,SAHA,gDAKfL,EAAS,EAAD,IACRD,EAAW,IANI,yDAAH,qDAShBG,GACD,GAAE,CAACP,KAGF,+BACE,wBACGG,EAAQQ,KAAI,SAAAC,GACX,OACE,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,OAIR,C,sLCpCKC,EAAW,gCACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA0BC,EAA1B,+BAAgC,GAAIC,EAApC,+BAA6C,CAAC,EAA9C,SACqBC,MAAMF,EAAKC,GADhC,YACQE,EADR,QAEcC,GAFd,iCAEyBD,EAAKE,OAF9B,gDAEuCC,QAAQC,OAAO,IAAIC,MAAM,cAFhE,2GAKO,SAASC,IACd,OAAOV,EAAW,GAAD,OAAIF,EAAJ,oCAAwCC,GAC1D,CACM,SAASY,EAAc7B,GAC5B,OAAOkB,EAAW,GAAD,OACZF,EADY,iBACKhB,EADL,oBACwBiB,EADxB,mBAGlB,CACM,SAASa,EAAuBC,GACrC,OAAOb,EAAW,GAAD,OACZF,EADY,gCACoBC,EADpB,iCACgDc,EADhD,+BAGlB,CACM,SAASC,EAAYhC,GAC1B,OAAOkB,EAAW,GAAD,OACZF,EADY,iBACKhB,EADL,4BACgCiB,EADhC,mBAGlB,CACM,SAAST,EAAeR,GAC7B,OAAOkB,EAAW,GAAD,OACZF,EADY,iBACKhB,EADL,4BACgCiB,EADhC,0BAGlB,C,sBC9BD,SAASgB,EAAmBC,EAAKC,EAAST,EAAQU,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAON,EAAII,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAhB,EAAOgB,EAET,CAEIF,EAAKG,KACPR,EAAQM,GAERhB,QAAQU,QAAQM,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIzB,SAAQ,SAAUU,EAAST,GACpC,IAAIQ,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbR,EAAmBC,EAAKC,EAAST,EAAQU,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdnB,EAAmBC,EAAKC,EAAST,EAAQU,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["Pages/Reviews/Reviews.js","services/Services.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviewsById } from 'services/Services';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [, setError] = useState(null);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const res = await getReviewsById(movieId);\n        setReviews(res.results);\n      } catch (error) {\n        setError(error);\n        setReviews([]);\n      }\n    };\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      <ul>\n        {reviews.map(review => {\n          return (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '09994a796f4e1a9c14a0723469809976';\n\nasync function ErrorFetch(url = '', config = {}) {\n  const resp = await fetch(url, config);\n  return resp.ok ? await resp.json() : Promise.reject(new Error('Not Found'));\n}\n\nexport function getPopularMovies() {\n  return ErrorFetch(`${BASE_URL}trending/all/day?api_key=${KEY}`);\n}\nexport function getMoviesById(movieId) {\n  return ErrorFetch(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n}\nexport function getMoviesBySearchQuery(query) {\n  return ErrorFetch(\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n}\nexport function getCastById(movieId) {\n  return ErrorFetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n}\nexport function getReviewsById(movieId) {\n  return ErrorFetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","reviews","setReviews","setError","useEffect","getReviews","getReviewsById","res","results","map","review","author","content","id","BASE_URL","KEY","ErrorFetch","url","config","fetch","resp","ok","json","Promise","reject","Error","getPopularMovies","getMoviesById","getMoviesBySearchQuery","query","getCastById","asyncGeneratorStep","gen","resolve","_next","_throw","key","arg","info","value","error","done","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}