{"version":3,"file":"static/js/371.36ad657b.chunk.js","mappings":"2NAsCA,EApCkB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAiBA,OACE,6BACE,kBAAMH,SAbW,SAAAI,GACnBA,EAAEC,iBAEmB,KAAjBH,EAAMI,OAKVN,EAASE,GAJPK,MAAM,iHAKT,EAIG,WACE,kBACEC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAOV,EACPW,SAxBa,SAAAT,GACnBD,EAASC,EAAEU,OAAOF,MAAMG,cACzB,KAwBK,mBAAQP,KAAK,SAASQ,QAAShB,EAA/B,wBAMP,E,SCXD,EArBmB,WAAO,IAAD,EACvB,GAAqBC,EAAAA,EAAAA,UAAS,IAArBE,GAAT,eACA,GAAqBF,EAAAA,EAAAA,UAAS,IAArBgB,GAAT,eACMC,GAAWC,EAAAA,EAAAA,MAEXjB,EAAK,UAAG,IAAIkB,gBAAgBF,EAASG,QAAQC,IAAI,gBAA5C,QAAwD,IAEnEC,EAAAA,EAAAA,YAAU,WACHrB,IAGLsB,EAAAA,EAAAA,IAAuBtB,GAAOuB,MAAK,SAAAC,GACjCT,EAASS,EAAIC,QACd,GACF,GAAE,CAACzB,IAKJ,OAAO,SAAC,EAAD,CAAWF,SAJF,SAAA0B,GACdvB,EAASuB,EACV,GAGF,C,uHCvBKE,EAAW,gCACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA0BC,EAA1B,+BAAgC,GAAIC,EAApC,+BAA6C,CAAC,EAA9C,UACqBC,EAAAA,EAAAA,GAAMF,EAAKC,GADhC,YACQE,EADR,QAEcC,GAFd,iCAEyBD,EAAKE,OAF9B,gDAEuCC,QAAQC,OAAO,IAAIC,MAAM,cAFhE,2GAKO,SAASC,IACd,OAAOV,EAAW,GAAD,OAAIF,EAAJ,oCAAwCC,GAC1D,CAMM,SAASL,EAAuBtB,GACrC,OAAO4B,EAAW,GAAD,OACZF,EADY,gCACoBC,EADpB,iCACgD3B,EADhD,+BAGlB,C","sources":["components/Searchbar/Searchbar.js","Pages/MoviesPage/MoviesPage.js","services/Services.js"],"sourcesContent":["import { useState } from 'react';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    setQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      alert('Введіть назву фільму');\n      return;\n    }\n\n    onSubmit(query);\n  };\n\n  return (\n    <header>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={query}\n          onChange={handleChange}\n        />\n        <button type=\"submit\" onClick={onSubmit}>\n          Search\n        </button>\n      </form>\n    </header>\n  );\n};\nexport default Searchbar;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport { getMoviesBySearchQuery } from 'services/Services';\n\nconst MoviesPage = () => {\n  const [, setQuery] = useState('');\n  const [, setItems] = useState([]);\n  const location = useLocation();\n\n  const query = new URLSearchParams(location.search).get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    getMoviesBySearchQuery(query).then(res => {\n      setItems(res.results);\n    });\n  }, [query]);\n  const onClick = res => {\n    setQuery(res);\n  };\n\n  return <Searchbar onSubmit={onClick}></Searchbar>;\n};\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '09994a796f4e1a9c14a0723469809976';\n\nasync function ErrorFetch(url = '', config = {}) {\n  const resp = await axios(url, config);\n  return resp.ok ? await resp.json() : Promise.reject(new Error('Not Found'));\n}\n\nexport function getPopularMovies() {\n  return ErrorFetch(`${BASE_URL}trending/all/day?api_key=${KEY}`);\n}\nexport function getMoviesById(movieId) {\n  return ErrorFetch(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n}\nexport function getMoviesBySearchQuery(query) {\n  return ErrorFetch(\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n}\nexport function getCastById(movieId) {\n  return ErrorFetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n}\nexport function getReviewsById(movieId) {\n  return ErrorFetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n}\n"],"names":["onSubmit","useState","query","setQuery","e","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","value","onChange","target","toLowerCase","onClick","setItems","location","useLocation","URLSearchParams","search","get","useEffect","getMoviesBySearchQuery","then","res","results","BASE_URL","KEY","ErrorFetch","url","config","axios","resp","ok","json","Promise","reject","Error","getPopularMovies"],"sourceRoot":""}